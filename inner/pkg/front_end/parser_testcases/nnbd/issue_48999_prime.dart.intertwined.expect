parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, main, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, dynamic)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, false)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, false)
                  looksLikeLocalFunction(i)
                  listener: beginMetadataStar(dynamic)
                  listener: endMetadataStar(0)
                  listener: handleIdentifier(dynamic, typeReference)
                  listener: handleNoTypeArguments(i)
                  listener: handleType(dynamic, null)
                  listener: beginVariablesDeclaration(i, null, null)
                  parseVariablesDeclarationRest(dynamic, true)
                    parseOptionallyInitializedIdentifier(dynamic)
                      ensureIdentifier(dynamic, localVariableDeclaration)
                        listener: handleIdentifier(i, localVariableDeclaration)
                      listener: beginInitializedIdentifier(i)
                      parseVariableInitializerOpt(i)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true)
                            parseUnaryExpression(=, true)
                              parsePrimary(=, expression)
                                parseLiteralInt(=)
                                  listener: handleLiteralInt(10)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(i)
                    ensureSemicolon(10)
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralString(()
                                              parseSingleLiteralString(()
                                                listener: beginLiteralString(')
                                                parseExpression(${)
                                                  parsePrecedenceExpression(${, 1, true)
                                                    parseUnaryExpression(${, true)
                                                      parsePrimary(${, expression)
                                                        parseParenthesizedExpressionOrFunctionLiteral(${)
                                                          parseParenthesizedExpression(${)
                                                            parseExpressionInParenthesis(${)
                                                              parseExpressionInParenthesisRest(()
                                                                parseExpression(()
                                                                  parsePrecedenceExpression((, 1, true)
                                                                    parseUnaryExpression((, true)
                                                                      parsePrimary((, expression)
                                                                        parseSendOrFunctionLiteral((, expression)
                                                                          parseSend((, expression)
                                                                            isNextIdentifier(()
                                                                            ensureIdentifier((, expression)
                                                                              listener: handleIdentifier(i, expression)
                                                                            listener: handleNoTypeArguments(as)
                                                                            parseArgumentsOpt(i)
                                                                              listener: handleNoArguments(as)
                                                                            listener: handleSend(i, as)
                                                                    parseAsOperatorRest(i)
                                                                      listener: beginAsOperatorType(as)
                                                                      computeTypeAfterIsOrAs(as)
                                                                      listener: handleIdentifier(int, typeReference)
                                                                      listener: handleNoTypeArguments(?)
                                                                      listener: handleType(int, ?)
                                                                      listener: endAsOperatorType(as)
                                                                      listener: handleAsOperator(as)
                                                                      skipChainedAsIsOperators(?)
                                                                ensureCloseParen(?, ()
                                                            listener: handleParenthesizedExpression(()
                                                listener: handleInterpolationExpression(${, })
                                                parseStringPart(})
                                                  listener: handleStringPart(')
                                                listener: endLiteralString(1, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, print)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, false)
                looksLikeLocalFunction(print)
                parseExpressionStatement(;)
                  parseExpression(;)
                    parsePrecedenceExpression(;, 1, true)
                      parseUnaryExpression(;, true)
                        parsePrimary(;, expression)
                          parseSendOrFunctionLiteral(;, expression)
                            looksLikeFunctionBody(;)
                            parseSend(;, expression)
                              isNextIdentifier(;)
                              ensureIdentifier(;, expression)
                                listener: handleIdentifier(print, expression)
                              listener: handleNoTypeArguments(()
                              parseArgumentsOpt(print)
                                parseArguments(print)
                                  parseArgumentsRest(()
                                    listener: beginArguments(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true)
                                        parseUnaryExpression((, true)
                                          parsePrimary((, expression)
                                            parseLiteralString(()
                                              parseSingleLiteralString(()
                                                listener: beginLiteralString(')
                                                parseExpression(${)
                                                  parsePrecedenceExpression(${, 1, true)
                                                    parseUnaryExpression(${, true)
                                                      parsePrimary(${, expression)
                                                        parseParenthesizedExpressionOrFunctionLiteral(${)
                                                          parseParenthesizedExpression(${)
                                                            parseExpressionInParenthesis(${)
                                                              parseExpressionInParenthesisRest(()
                                                                parseExpression(()
                                                                  parsePrecedenceExpression((, 1, true)
                                                                    parseUnaryExpression((, true)
                                                                      parsePrimary((, expression)
                                                                        parseSendOrFunctionLiteral((, expression)
                                                                          parseSend((, expression)
                                                                            isNextIdentifier(()
                                                                            ensureIdentifier((, expression)
                                                                              listener: handleIdentifier(i, expression)
                                                                            listener: handleNoTypeArguments(is)
                                                                            parseArgumentsOpt(i)
                                                                              listener: handleNoArguments(is)
                                                                            listener: handleSend(i, is)
                                                                    parseIsOperatorRest(i)
                                                                      listener: beginIsOperatorType(is)
                                                                      computeTypeAfterIsOrAs(is)
                                                                      listener: handleIdentifier(int, typeReference)
                                                                      listener: handleNoTypeArguments(?)
                                                                      listener: handleType(int, ?)
                                                                      listener: endIsOperatorType(is)
                                                                      listener: handleIsOperator(is, null)
                                                                      skipChainedAsIsOperators(?)
                                                                ensureCloseParen(?, ()
                                                            listener: handleParenthesizedExpression(()
                                                listener: handleInterpolationExpression(${, })
                                                parseStringPart(})
                                                  listener: handleStringPart(')
                                                listener: endLiteralString(1, ))
                                    listener: endArguments(1, (, ))
                              listener: handleSend(print, ;)
                  ensureSemicolon())
                  listener: handleExpressionStatement(;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(3, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
