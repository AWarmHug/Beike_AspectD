library test;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_dynamic_param_via_expr1.dart:9:11: Error: The 'constructor-tearoffs' language feature is disabled for this library.
// Try removing the `@dart=` annotation or setting the language version to 2.15 or higher.
// var v = (f<dynamic>)/*@typeArgs=int**/(/*@returnType=int**/() {
//           ^
// pkg/front_end/testcases/inference/unsafe_block_closure_inference_function_call_explicit_dynamic_param_via_expr1.dart:4:1: Context: This is the annotation that opts out this library from the 'constructor-tearoffs' language feature.
// // @dart=2.9
// ^^^^^^^^^^^^
//
import self as self;
import "dart:core" as core;

static field core::List<core::int*>* v = #C1<core::int*>(() → core::int* {
  return 1;
}){(() →* core::int*) →* core::List<core::int*>*};
static method f<T extends core::Object* = dynamic>(() →* self::f::T* g) → core::List<self::f::T*>*
  return <self::f::T*>[g(){() →* self::f::T*}];
static method main() → dynamic {}

constants  {
  #C1 = static-tearoff self::f
}
